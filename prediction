pred_singl = function(n,m,sigma,theta,beta,k,M_n){
  S = 0
  
  p = log(theta+(k-M_n)*sigma) + lgamma(theta+n-M_n) - lgamma(theta+n-M_n+sigma)
  
  for (l in 0:m){
    
    a = lchoose(m,l) + l*log(1-beta) + (m-l)*log(beta)
    
    b = log(m-l) +  lgamma(theta+n-M_n+sigma+m-l-1)   - lgamma(theta+n-M_n+m-l) + p
    
    t = (exp(b) + l) * exp(a)
    S = S + t
    
  }
  
  return (round(S,digits=0))
}

pred_dim_clust = function(n,m,r,sigma,theta,beta,k,M_n){
  S=0

  p = lgamma(r-sigma) - lgamma(1-sigma) +log(theta+(k-M_n)*sigma) 
      + lgamma(theta+n-M_n) - lgamma(theta+n-M_n+sigma)
       
  
  for(l in 0:(m-r)){
    
    a = lchoose(m,l) + l*log(1-beta) + (m-l)*log(beta)
    
    b = lchoose(m-l,r)  +  lgamma(theta+n-M_n+sigma+m-l-r) - lgamma(theta+n-M_n+m-l) + p
    
    t = exp(a + b)
    
    S = S + t
    
  }
  
  return(round(S,digits=0))
} 

pred_clust = function(n,m,sigma,theta,beta,k,M_n){
  S = 0
  
  c = k - M_n + theta/sigma
  p = log(c) + lgamma(theta+n-M_n) - lgamma(theta+n-M_n+sigma)
  
  for (l in 0:m){
    
    a = lchoose(m,l) + l*log(1-beta) + (m-l)*log(beta)
    
    b = lgamma(theta+n-M_n+sigma+m-l) - lgamma(theta+n-M_n+m-l) + p
    
    t = (exp(b) + l - c) * exp(a)
    S = S + t
    
  }
  
  return (round(S,digits=0))
}


sigma = mean(sigma_values)
theta = mean(theta_values)
beta = mean(beta_values)
M_n = mean(m1_bar_values)

sigma = 0.2
theta = 100
beta = 0.9
M_n = 2500
k = 3000

n = 25000
m = 25000
r = 2


N1 = pred_singl(n,m,sigma,theta,beta,k,M_n)
Nr = pred_dim_clust(n,m,r,sigma,theta,beta,k,M_n)
Nk = pred_clust(n,m,sigma,theta,beta,k,M_n)
